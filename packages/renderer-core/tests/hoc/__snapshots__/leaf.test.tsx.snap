// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`children > this.props.children is array 1`] = `
<DocumentFragment>
  <div
    data-testid="div"
  >
    <div
      content="content"
      data-testid="text"
    >
      content
    </div>
    <div
      content="content"
      data-testid="text"
    >
      content
    </div>
  </div>
</DocumentFragment>
`;

exports[`lifecycle > leaf change and make componentWillReceiveProps 1`] = `
<DocumentFragment>
  <div
    data-testid="div"
  >
    <div
      __id="text6"
      __tag="222"
      componentid="text6"
      content="content 123"
      data-testid="text"
    >
      content 123
    </div>
  </div>
</DocumentFragment>
`;

exports[`lifecycle > props change and make componentWillReceiveProps 1`] = `
<DocumentFragment>
  <div
    data-testid="div"
  >
    <div
      content="content"
      data-testid="text"
    >
      content
    </div>
  </div>
</DocumentFragment>
`;

exports[`lifecycle > props change and make componentWillReceiveProps 2`] = `
<DocumentFragment>
  <div
    data-testid="div"
  >
    <div
      content="content 123"
      data-testid="text"
    >
      content 123
    </div>
  </div>
</DocumentFragment>
`;

exports[`lifecycle > props change and make componentWillReceiveProps 3`] = `
<DocumentFragment>
  <div
    data-testid="div"
  >
    <div
      __tag="111"
      content="content 123"
      data-testid="text"
    >
      content 123
    </div>
  </div>
</DocumentFragment>
`;

exports[`mini unit render > leaf has a loop, render from parent 1`] = `
<DocumentFragment>
  <div>
    <div
      content="content"
      data-testid="text"
    >
      content
    </div>
  </div>
</DocumentFragment>
`;

exports[`mini unit render > make text props change 1`] = `
<DocumentFragment>
  <div>
    <div
      content="content"
      data-testid="text"
    >
      content
    </div>
  </div>
</DocumentFragment>
`;

exports[`mini unit render > make text props change 2`] = `
<DocumentFragment>
  <div>
    <div
      content="content"
      data-testid="text"
    >
      content
    </div>
  </div>
</DocumentFragment>
`;

exports[`mini unit render > parent is a mock leaf 1`] = `
<DocumentFragment>
  <div>
    <div
      content="content"
      data-testid="text"
    >
      content
    </div>
  </div>
</DocumentFragment>
`;

exports[`mini unit render > props has new children 1`] = `
<DocumentFragment>
  <div>
    <div
      content="content"
      data-testid="text"
    >
      content
    </div>
  </div>
</DocumentFragment>
`;

exports[`onChildrenChange > children is array string 1`] = `
<DocumentFragment>
  <div
    data-testid="div"
  >
    onChildrenChange content 01onChildrenChange content 02
  </div>
</DocumentFragment>
`;

exports[`onPropChange > change textNode [key:___condition___] props, but not hidden component 1`] = `
<DocumentFragment>
  <div
    data-testid="div"
  >
    <div
      content="content"
      data-testid="text"
    >
      content
    </div>
  </div>
</DocumentFragment>
`;

exports[`onPropChange > change textNode [key:___condition___] props, hide textNode component 1`] = `
<DocumentFragment>
  <div
    data-testid="div"
  >
    <div
      content="content"
      data-testid="text"
    >
      content
    </div>
  </div>
</DocumentFragment>
`;

exports[`onPropChange > change textNode [key:content], content in this.props but not in leaf.export result 1`] = `
<DocumentFragment>
  <div
    data-testid="div"
  >
    <div
      content="content"
      data-testid="text"
    >
      content
    </div>
  </div>
</DocumentFragment>
`;

exports[`onPropChange > change textNode [key:content], content in this.props but not in leaf.export result 2`] = `
<DocumentFragment>
  <div
    data-testid="div"
  >
    <div
      content="content"
      data-testid="text"
    >
      content
    </div>
  </div>
</DocumentFragment>
`;

exports[`onVisibleChange > visible is false 1`] = `
<DocumentFragment>
  <div
    data-testid="div"
  >
    <div
      content="content"
      data-testid="text"
    >
      content
    </div>
  </div>
</DocumentFragment>
`;

exports[`onVisibleChange > visible is true 1`] = `
<DocumentFragment>
  <div
    data-testid="div"
  >
    <div
      content="content"
      data-testid="text"
    >
      content
    </div>
  </div>
</DocumentFragment>
`;
